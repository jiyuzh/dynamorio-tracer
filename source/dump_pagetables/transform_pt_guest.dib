#!meta

{"kernelInfo":{"defaultKernelName":"csharp","items":[{"aliases":[],"name":".NET"},{"aliases":["C#","c#"],"languageName":"C#","name":"csharp"},{"aliases":["F#","f#"],"languageName":"F#","name":"fsharp"},{"aliases":[],"languageName":"HTML","name":"html"},{"aliases":[],"languageName":"KQL","name":"kql"},{"aliases":[],"languageName":"Mermaid","name":"mermaid"},{"aliases":["powershell"],"languageName":"PowerShell","name":"pwsh"},{"aliases":[],"languageName":"SQL","name":"sql"},{"aliases":[],"name":"value"}]}}

#!csharp

// IMPORTANT NOTICE: don't forget to attach line count !!!
// sed -i "1i $(wc -l ./pt_dump | awk '{print $1}')" ./pt_dump

var pt_bounding = UInt64.Max; // the max va of host pt dump

#!csharp

using System.IO;

Console.WriteLine($"Loading");

var path = @"/home/ubuntu/tracer/eval/scripts2/results/2023-04-16-1681703258-graph500";
var input = Path.Combine(path, "pt_dump_raw");
var output = Path.Combine(path, "pt_dump");
var file = File.ReadAllLines(input);

Console.WriteLine($"Done");

#!csharp

void dump(StringBuilder sb, ulong[] regist)
{
	sb.AppendLine($"{regist[0]:x},{regist[1]:x},{regist[2]:x},{regist[3]:x},{regist[4]:x},{regist[5]:x}");
}

#!csharp

// this is the real pass with all available data

var regist = new ulong[6];

// parse cr3
var cr3 = file[0].Split()[4];
regist[1] = Convert.ToUInt64(cr3, 16) << 12;

var max = 0UL;
var sb = new StringBuilder();

Console.WriteLine($"Total Line: {file.Length}");
if (File.Exists(output)) {
	File.Delete(output);
}

for (var i = 1; i < file.Length; i++) {
	var ln = file[i].Trim().Split();
	if (ln.Length < 7)
		continue;

	if (i % 100000 == 0) {
		Console.WriteLine($"Now {i}...");
		File.AppendAllText(output, sb.ToString());
		sb.Clear();
	}

	var lvl = ln[0];
	var va = Convert.ToUInt64(ln[4], 16);
	var pa = Convert.ToUInt64(ln[6], 16) << 12;

	pa = pa % pt_bounding; // this should only impact <0.1% pages, due to various holes in VM/Guest

	regist[0] = va;

	switch (lvl) {
		case "P4D":
		case "PUD":
			regist[2] = pa;
			break;
		case "PMD":
			regist[3] = pa;
			break;
		case "PTE":
			regist[4] = pa;
			break;
		case "PAGE":
			regist[5] = pa;
			dump(sb, regist);
			break;
	}
}

// IMPORTANT NOTICE: don't forget to attach line count !!!
// sed -i "1i $(wc -l ./pt_dump | awk '{print $1}')" ./pt_dump
